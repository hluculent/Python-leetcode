% 暴力枚举
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int n = nums.size();
        int ans = -10000000;
        for (int i=0;i<n;++i)
            for (int j=i;i<n;++j)
            {
                int sum = 0;
                for (int k=i;k<=j;++k)
                    sum += nums[k];
                if (sum > ans)
                {
                    ans = sum;
                }
            }
        return ans;
    }
};

% 优化枚举
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int n = nums.size();
        int ans = -100000000;
        for (int i=0;i<n;++i)
        {
            int sum = 0;
            for (int j=i;j<n;++j)
            {
                sum += nums[j];
                if (sum > ans)
                {
                    ans = sum;
                }
            }
        }
        return ans;
    }
};

% 贪心法
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int n = nums.size();
        int sum = 0;
        int ans = -100000000;
        for (int i=0;i<n;++i){            
            sum += nums[i];
            if (sum > ans)
                ans = sum;
            if (sum<0)
                sum = 0;
        }
        return ans;
    }
};
